// Code generated by entc, DO NOT EDIT.

package ent

import (
	"adomeit.xyz/recipe/ent/ingredient"
	"adomeit.xyz/recipe/ent/recipe"
	"adomeit.xyz/recipe/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	ingredientFields := schema.Ingredient{}.Fields()
	_ = ingredientFields
	// ingredientDescName is the schema descriptor for name field.
	ingredientDescName := ingredientFields[1].Descriptor()
	// ingredient.NameValidator is a validator for the "name" field. It is called by the builders before save.
	ingredient.NameValidator = ingredientDescName.Validators[0].(func(string) error)
	recipeFields := schema.Recipe{}.Fields()
	_ = recipeFields
	// recipeDescSlug is the schema descriptor for slug field.
	recipeDescSlug := recipeFields[1].Descriptor()
	// recipe.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	recipe.SlugValidator = recipeDescSlug.Validators[0].(func(string) error)
	// recipeDescName is the schema descriptor for name field.
	recipeDescName := recipeFields[2].Descriptor()
	// recipe.NameValidator is a validator for the "name" field. It is called by the builders before save.
	recipe.NameValidator = recipeDescName.Validators[0].(func(string) error)
	// recipeDescServings is the schema descriptor for servings field.
	recipeDescServings := recipeFields[7].Descriptor()
	// recipe.ServingsValidator is a validator for the "servings" field. It is called by the builders before save.
	recipe.ServingsValidator = recipeDescServings.Validators[0].(func(int) error)
	// recipeDescID is the schema descriptor for id field.
	recipeDescID := recipeFields[0].Descriptor()
	// recipe.DefaultID holds the default value on creation for the id field.
	recipe.DefaultID = recipeDescID.Default.(func() string)
}
